import streamlit as st
st.set_page_config(
    page_title="–ê–Ω–∞–ª—ñ–∑ VCI/TCI/VHI",
    layout="wide",
    initial_sidebar_state="expanded"
)

import pandas as pd
import os

@st.cache_data
def load_data():
    path = os.path.join("data", "full_df.csv")
    df = pd.read_csv(path)

    years = (
        df["year"].astype(str)
             .str.extract(r"(\d{4})")[0]
             .pipe(pd.to_numeric, errors="coerce")
    )
    valid = years.notna()
    df = df.loc[valid].copy()
    df["year"] = years[valid].astype(int)

    df["week"] = (
        pd.to_numeric(df["week"], errors="coerce")
          .fillna(1).astype(int)
    )

    return df

df = load_data()

st.title("–í—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è VCI / TCI / VHI –¥–ª—è –æ–±–ª–∞—Å—Ç–µ–π –£–∫—Ä–∞—ó–Ω–∏")

col1, col2 = st.columns([1, 2])

with col1:
    st.header("üîé –§—ñ–ª—å—Ç—Ä–∏")
    index_type = st.selectbox("–Ü–Ω–¥–µ–∫—Å", ["VCI", "TCI", "VHI"])
    region = st.selectbox("–û–±–ª–∞—Å—Ç—å", sorted(df["area"].unique()))

    year_min, year_max = int(df["year"].min()), int(df["year"].max())
    year_range = st.slider("–†–æ–∫–∏", year_min, year_max, (year_min, year_max))

    week_range = st.slider("–¢–∏–∂–Ω—ñ", 1, 52, (1, 52))

    st.markdown("---")
    sort_asc = st.checkbox("–°–æ—Ä—Ç—É–≤–∞—Ç–∏ –∑–∞ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º", value=False)
    sort_desc = st.checkbox("–°–æ—Ä—Ç—É–≤–∞—Ç–∏ –∑–∞ —Å–ø–∞–¥–∞–Ω–Ω—è–º", value=False)

    if st.button("üîÑ –°–∫–∏–Ω—É—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä–∏"):
        st.experimental_rerun()

with col2:
    st.header("–†–µ–∑—É–ª—å—Ç–∞—Ç–∏")

    df_filt = df[
        (df["area"] == region) &
        (df["year"].between(year_range[0], year_range[1])) &
        (df["week"].between(week_range[0], week_range[1]))
    ][["year", "week", index_type]].copy()

    if sort_asc and not sort_desc:
        df_filt = df_filt.sort_values(index_type, ascending=True)
    elif sort_desc and not sort_asc:
        df_filt = df_filt.sort_values(index_type, ascending=False)

    tab1, tab2, tab3 = st.tabs(["üìã –¢–∞–±–ª–∏—Ü—è", "üìà –ì—Ä–∞—Ñ—ñ–∫", "üó∫ –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è"])

    with tab1:
        st.subheader("–¢–∞–±–ª–∏—Ü—è")
        if df_filt.empty:
            st.warning("–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –∑–∞ —Ü–∏–º–∏ —Ñ—ñ–ª—å—Ç—Ä–∞–º–∏.")
        else:
            st.dataframe(df_filt, use_container_width=True)

    with tab2:
        st.subheader(f"{index_type} –ø–æ —Ç–∏–∂–Ω—è—Ö –¥–ª—è ¬´{region}¬ª")
        if df_filt.empty:
            st.warning("–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è –≥—Ä–∞—Ñ—ñ–∫–∞.")
        else:
            df_plot = df_filt.sort_values("week").set_index("week")[index_type]
            st.line_chart(df_plot)

    with tab3:
        st.subheader(f"–°–µ—Ä–µ–¥–Ω—ñ–π {index_type} –ø–æ –æ–±–ª–∞—Å—Ç—è—Ö")
        df_cmp = df[
            (df["year"].between(year_range[0], year_range[1])) &
            (df["week"].between(week_range[0], week_range[1]))
        ]
        comp = df_cmp.groupby("area")[index_type].mean().sort_values()
        st.bar_chart(comp)
